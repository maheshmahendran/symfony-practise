imports:
    - { resource: parameters.yml }
    - { resource: parameters.php }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi:             ~
    #translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Sensio Framework Extra Configuration
sensio_framework_extra:
    router: { annotations: true }
    request: { converters: true }
    view: { annotations: true }
    cache: { annotations: true }

# Doctrine Configuration
doctrine:
    dbal:
        default_connection: deepblu
        connections:
            deepblu:
              driver_class:   Realestate\MssqlBundle\Driver\PDODblib\Driver
              host:     "%deepblu_database_host%"
              port:     "%deepblu_database_port%"
              dbname:   "%deepblu_database_name%"
              user:     "%deepblu_database_user%"
              password: "%deepblu_database_password%"
              charset:  UTF8
              mapping_types:
                bit: boolean
    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        default_entity_manager: deepblu
        entity_managers:
            deepblu:
              connection: deepblu
              naming_strategy: doctrine.orm.naming_strategy.underscore
              auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

# JMS Serializer Configuration
jms_serializer:
    property_naming:
        separator:  _
        lower_case: true
    metadata:
        auto_detection: true

#FOS REST Configuration
fos_rest:
    body_converter:
        enabled: true
        validate: true
        validation_errors_argument: violations
    view:
        view_response_listener:
            enabled: true
            force: true
        mime_types:
            json:
                - application/json
                - application/x-json
            xml:
                - text/xml
            html:
                - text/html
        formats:
            xml: true
            json: true
            rss: true
            html: true
    exception:
        codes:
            'Symfony\Component\Routing\Exception\ResourceNotFoundException': 404
            'Doctrine\ORM\OptimisticLockException': HTTP_CONFLICT
        messages:
            'Symfony\Component\Routing\Exception\ResourceNotFoundException': true
    param_fetcher_listener: true
    serializer:
        serialize_null: true
    format_listener:
        rules:
            - { path: '^/', priorities: ['json', 'xml', 'html'], fallback_format: json, prefer_extension: false }

#FOS HTTP Cache Configuration
fos_http_cache:
    invalidation:
        enabled: true
    proxy_client:
        varnish:
            servers: 127.0.0.1:80
    cache_control:
        defaults:
            overwrite: true
#        rules:
#            -
#              match:
#                  path: ^/somepath
#              headers:
#                  cache_control: { public: true, max_age: 86400, s_maxage: 86400 }
#                  etag: true
#                  vary: [Accept-Encoding, Accept-Language]

nelmio_api_doc:
    name: DeepBlu API
    default_sections_opened: true
    sandbox:
        body_format:
            default_format: json

# Bazinga HATEOAS Configuration
bazinga_hateoas:
    metadata:
        cache:                file
        file_cache:
            dir:              "%kernel.cache_dir%/hateoas"

# Nelmio CORS Configuration
nelmio_cors:
    defaults:
        allow_credentials: false
        allow_origin: []
        allow_headers: []
        allow_methods: []
        expose_headers: []
        max_age: 0
        hosts: []
        origin_regex: false
    paths:
        '^/':
            allow_credentials: true
            allow_origin: ['*']
            allow_headers: ['*']
            allow_methods: ['POST', 'PUT', 'GET', 'DELETE']
            max_age: 3600

# Pagerfanta Configuration
white_october_pagerfanta:
    exceptions_strategy:
        out_of_range_page:        to_http_not_found
        not_valid_current_page:   to_http_not_found

# Lexik JWT Authentication
lexik_jwt_authentication:
    private_key_path: "%jwt_private_key_path%"
    public_key_path:  "%jwt_public_key_path%"
    pass_phrase:      "%jwt_key_pass_phrase%"
    token_ttl:        "%jwt_token_ttl%"